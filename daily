#!/bin/bash
#=======================================================================
[[ $# -ne 3 ]] && { printf "$0: Invalid Arguments\n"; exit 1; }
day=$1
nmonth=$2
year=$3
months=(DUM JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC)
month=${months[$((10#$nmonth))]} 
printf "\n$day-$month-$year --------------------------------------------------------------\n"
[[ $(date -d $year$nmonth$day +%u) -ge 6 ]] && { printf "$day-$month-$year is weekend\n"; exit; }
[[ "$day$month$year" =~ ^(26JAN2018|13FEB2018|02MAR2018|29MAR2018|30MAR2018|01MAY2018|15AuG2018|22AUG2018|13SEP2018|20SEP2018|02OCT2018|18OCT2018|07NOV2018|08NOV2018|23NOV2018|25DEC2018)$ ]] && { printf "$day-$month-$year is holiday\n"; exit; }
#=======================================================================
basedir=/home/deepak/data
destdir=/home/deepak/data/bhav
srcdir=/home/deepak/data/bhav
db=$basedir/BhavDB
sqlite=/usr/bin/sqlite3
#=======================================================================
bhav() {
	link=https://www.nseindia.com/content/historical/EQUITIES/$year/$month/cm$day$month$year"bhav.csv.zip"
	src=$srcdir"/cm"$day$month$year"bhav.csv.zip"
	[[ ! -r $src ]] && { /usr/bin/wget -qU Firefox/30.0 $link -P $srcdir; [[ $? -ne 0 ]] && { return 1; } }
	dest=$destdir"/cm"$day$month$year"bhav.csv" 
	[[ ! -r $dest ]] && { /usr/bin/unzip -qo $src -d $destdir; }
	$sqlite $db "delete from bhav"
	/bin/sed '1,1d' $dest|$sqlite $db -separator ',' ".import /dev/stdin bhav" 
	for table in Open Close PrevClose High Low TrdQty Trade; do
		sql="alter table $table add [$day$month$year] REAL;"
		$sqlite $db "$sql"
		sql="update $table set [$day$month$year]=(select bhav.$table from bhav where bhav.ISIN=$table.ISIN and bhav.Series='EQ')"
		$sqlite $db "$sql"
	done
	[[ ! $dest ]] && { rm $dest; }
	return 0
}
#-----------------------------------------------------------------------
cmvolt() {
	link=https://www.nseindia.com/archives/nsccl/volt/CMVOLT_$day$nmonth$year".CSV"
	src=$srcdir"/CMVOLT_"$day$nmonth$year".CSV"
	[[ ! -r $src ]] && { /usr/bin/wget -qU Firefox/30.0 $link -P $srcdir; [[ $? -ne 0 ]] && { return 1; } }
	$sqlite $db "delete from cmvolt"
	/bin/sed '1,2d' $src | $sqlite $db -separator ',' ".import /dev/stdin cmvolt" 
	[[ $? -ne 0 ]] && { retrun 21; } 
	for table in LogReturn PrevVolatility DayVolatility YearVolatility; do
		sql="alter table $table add [$day$month$year] REAL;"
		$sqlite $db "$sql"
#		[[ $? -ne 0 ]] && { return 22; } 
		sql="update $table set [$day$month$year]=(select cmvolt.$table from cmvolt left join company on company.Symbol=cmvolt.Symbol where $table.ISIN=company.ISIN)"
		$sqlite $db "$sql"
		[[ $? -ne 0 ]] && { return 23; }
	done	
	return 0
}
#-----------------------------------------------------------------------
mto(){
	link=https://www.nseindia.com/archives/equities/mto/MTO_$day$nmonth$year".DAT"
	src=$srcdir"/MTO_"$day$nmonth$year".DAT"
	[[ ! -r $src ]] && { /usr/bin/wget -qU Firefox/30.0 $link -P $srcdir; [[ $? -ne 0 ]] && { return 1; } }
	$sqlite $db "delete from mto"
	/bin/sed '1,4d' $src | $sqlite $db -separator ',' ".import /dev/stdin mto" 
	[[ $? -ne 0 ]] && { retrun 21; } 
	[[ -r $dest ]] && { rm $dest; }
	for table in DelQty DelPer; do
		sql="alter table $table add [$day$month$year] REAL;"
		$sqlite $db "$sql"
#		[[ $? -ne 0 ]] && { return 22; } 
		sql="update $table set [$day$month$year]=(select mto.$table from mto left join company on company.Symbol=mto.Symbol and company.Series=mto.Series where $table.ISIN=company.ISIN)"
		$sqlite $db "$sql"
		[[ $? -ne 0 ]] && { return 23; }
	done	
	return 0
}
#=======================================================================
for fn in bhav cmvolt mto; do
	eval $fn
	if   [[ $? -eq 0  ]]; then printf "$fn completed successfully\n";
	elif [[ $? -eq 1  ]]; then printf "$fn download data failed\n";
	elif [[ $? -eq 21 ]]; then printf "$fn loading stage table failed\n";
	elif [[ $? -eq 22 ]]; then printf "$fn column creating failed\n";
	elif [[ $? -eq 23 ]]; then printf "$fn loading data table failed\n";
	fi	
done
